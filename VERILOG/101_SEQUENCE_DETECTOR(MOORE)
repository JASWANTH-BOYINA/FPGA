`timescale 1ns / 1ps


module seq_detector_101_moore (
    input clk,
    input reset,
    input x,
    output reg y
);

    // State encoding using parameters
    parameter S0 = 2'b00;  // Initial state
    parameter S1 = 2'b01;  // Detected '1'
    parameter S2 = 2'b10;  // Detected '10'
    parameter S3 = 2'b11;  // Detected '101'

    reg [1:0] state, next_state;

    // State transition
    always @(posedge clk or posedge reset) begin
        if (reset)
            state <= S0;
        else
            state <= next_state;
    end

    // Next state logic
    always @(*) begin
        case (state)
            S0: next_state = (x == 1'b1) ? S1 : S0;
            S1: next_state = (x == 1'b0) ? S2 : S1;
            S2: next_state = (x == 1'b1) ? S3 : S0;
            S3: next_state = (x == 1'b0) ? S2 : S1;
            default: next_state = S0;
        endcase
    end

    // Output logic (Moore: depends on state only)
    always @(*) begin
        case (state)
            S3: y = 1'b1;
            default: y = 1'b0;
        endcase
    end

endmodule
