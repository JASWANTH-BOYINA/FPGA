`timescale 1ns / 1ps


module fir_filter(input clk,output[15:0] data_out,output dout_valid);
wire rst,din_valid;
wire[15:0] data_in;
wire s_axis_data_tready;

fir_compiler_0 your_instance_name (
  .aresetn(rst),                        // input wire aresetn
  .aclk(clk),                              // input wire aclk
  .s_axis_data_tvalid(din_valid),  // input wire s_axis_data_tvalid
  .s_axis_data_tready(s_axis_data_tready),  // output wire s_axis_data_tready
  .s_axis_data_tdata(data_in),    // input wire [15 : 0] s_axis_data_tdata
  .m_axis_data_tvalid(dout_valid),  // output wire m_axis_data_tvalid
  .m_axis_data_tdata(data_out)    // output wire [15 : 0] m_axis_data_tdata
);

vio_fir your_instance_name2 (
  .clk(clk),                // input wire clk
  .probe_in0(dout_valid),    // input wire [0 : 0] probe_in0
  .probe_in1(data_out),    // input wire [15 : 0] probe_in1
  .probe_out0(rst),  // output wire [0 : 0] probe_out0
  .probe_out1(din_valid),  // output wire [0 : 0] probe_out1
  .probe_out2(data_in)  // output wire [15 : 0] probe_out2
);

ila_fir your_instance_name3 (
	.clk(clk), // input wire clk


	.probe0(dout_valid), // input wire [0:0]  probe0  
	.probe1(s_axis_data_tready), // input wire [0:0]  probe1 
	.probe2(data_out) // input wire [15:0]  probe2
);

endmodule
